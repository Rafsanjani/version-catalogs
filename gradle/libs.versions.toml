[versions]
activity = "1.9.0"
compileSdk = "34"
koin = "3.5.6"
metricsPerformance = "1.0.0-beta01"
minimumSdk = "28"
targetSdk = "34"
appVersionCode = "80"

assertk = "0.28.1"
compose-compiler = "1.5.13"
dagger = "2.51.1"
compose-bom = "2024.06.00"
benchmark-macro-junit4 = "1.2.4"
composeLintChecks = "1.3.1"
googlePlayServices = "4.4.2"
kotlinxCollectionsImmutable = "0.3.7"
compose-multiplatform = "1.6.11"
voyager = "1.0.0"
moko = "0.24.1"
ktor = "2.3.12"
kermit = "2.0.4"
openaiKotlin = "3.8.1"

kalendar = "1.3.1"
kotestRunnerJunit5 = "5.9.1"
kotlinInject = "0.7.1"
material2 = "1.12.0"
compose-material = "1.6.8"
material3 = "1.2.1"
gradle = "8.5.0"
detekt = "1.23.6"
ktlint = "12.1.1"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.22"
coroutines = "1.8.1"
okhttp = "5.0.0-alpha.14"
coil = "2.6.0"
androidxtest = "1.6.0"
media3 = "1.3.1"
paging = "3.3.0"
androidxnavigation = "2.7.7"
firebase = "33.1.1"
firebase-plugin = "3.0.2"
moshi = "1.15.1"
retrofit = "2.11.0"
accompanist = "0.34.0"
work = "2.9.0"
room = "2.6.1"
lifecycle = "2.8.2"
sqldelight = "2.0.2"
dokka = "1.9.20"
kmpNativeCoroutines = "0.13.3"
core-ktx = "1.13.1"
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
appcompat = "1.6.1"
runner = "1.0.2"
nexusPublish = "2.0.0"
androidx-hilt-compiler = "1.2.0"
kotlinPoet = "1.17.0"
javaPoet = "1.13.0"
firebasePerformancePlugin = "1.4.2"
firebaseCrashlyticsPlugin = "2.9.2"
paparazzi = "1.3.4"
richTextEditor = "1.0.0-rc05"
stately = "2.0.7"
mockmp = "1.17.0"
sonar = "5.0.0.4638"
buildkonfig = "0.15.1"
kover = "0.8.1"
baselineprofile = "1.2.4"
mockative = "2.2.2"
compose-rules="0.4.4"
sentry="7.10.0"
mokkery = "2.1.0"

[libraries]
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
androidx-metrics-performance = { module = "androidx.metrics:metrics-performance", version.ref = "metricsPerformance" }
assertk-common = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-lint-checks = { module = "com.slack.lint.compose:compose-lint-checks", version.ref = "composeLintChecks" }
compose-ui-ui = { module = "androidx.compose.ui:ui" }
compose-ui-util = { module = "androidx.compose.ui:ui-util" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-data = { module = "androidx.compose.ui:ui-tooling-data" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-test-unit = { module = "androidx.compose.ui:ui-unit" }
compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
compose-foundation-foundation = { module = "androidx.compose.foundation:foundation" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
compose-material-iconsextended = { module = "androidx.compose.material:material-icons-extended" }
compose-animation-animation = { module = "androidx.compose.animation:animation" }
compose-material-material2 = { module = "androidx.compose.material:material", version.ref = "compose-material" }
compose-material-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
compose-material-material3-windowSizeClass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "material3" }
richTextEditor = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "richTextEditor" }
sentry-android = { module = "io.sentry:sentry-android", version.ref = "sentry" }

# Multiplatform mocking
mockmp-runtime = { module = "org.kodein.mock:mockmp-runtime", version.ref = "mockmp" }

#Touchlab Stately
touchlab-stately = { module = "co.touchlab:stately-common", version.ref = "stately" }
touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

#OpenAI Kotlin Client
openAiKotlin = { module = "com.aallam.openai:openai-client", version.ref = "openaiKotlin" }

#Kotlin Libs
kalendar = { module = "com.himanshoe:kalendar", version.ref = "kalendar" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-jvm = { module = "io.insert-koin:koin-core-jvm", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.require = "1.1.5" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotestRunnerJunit5" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlin-inject-compiler-ksp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-metadataJvm = "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0"

#Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-auth = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-analyticsKts = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-crashlytics-gradlePlugin = "com.google.firebase:firebase-crashlytics-gradle:3.0.2"

#Moshi
square-moshi-core = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
square-moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
square-moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

#Sql Delight
square-sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
square-sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
square-sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
square-sqldelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
square-sqldelight-coroutinesExt = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

cashapp-paparazzi = { module = "app.cash.paparazzi:paparazzi", version.ref = "paparazzi" }
#Leak Canary
square-leakcanary = "com.squareup.leakcanary:leakcanary-android:2.14"

#OkHttp
square-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
square-okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
square-okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

#Retrofit
square-retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
square-retrofit2-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }
square-retrofit2-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

#Kotlin Poet
square-kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
square-javaPoet = { module = "com.squareup:javapoet", version.ref = "javaPoet" }

#Accompanist
accompanist-insets = { module = "com.google.accompanist:accompanist-insets-ui", version.ref = "accompanist" }
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist-placeholder-material = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-navigation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-native = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }

kotlin-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.6.0"

coil-coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

androidx-appcompat = "androidx.appcompat:appcompat:1.7.0"
androidx-core = "androidx.core:core-ktx:1.13.1"
androidx-activity-compose = "androidx.activity:activity-compose:1.9.0"
androidx-fragment = "androidx.fragment:fragment-ktx:1.8.0"
androidx-dynamicanimation = "androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03"
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-startup = "androidx.startup:startup-runtime:1.1.1"
androidx-palette = "androidx.palette:palette-ktx:1.0.0"
androidx-datastore-core = "androidx.datastore:datastore-preferences-core:1.1.1"
androidx-datastore-preferences = "androidx.datastore:datastore-preferences:1.1.1"
androidx-datastore-okio = "androidx.datastore:datastore-core-okio:1.1.1"
androidx-test-ext-junit = "androidx.test.ext:junit:1.1.5"

#Work
androidx-work = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "work" }
androidx-work-multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "work" }
androidx-work-gcm = { module = "androidx.work:work-gcm", version.ref = "work" }

#Dagger Hilt
dagger-hilt = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }
dagger-hilt-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "dagger" }
dagger-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }

#Room
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-rxJava2 = { module = "androidx.room:room-rxjava2", version.ref = "room" }
androidx-room-guava = { module = "androidx.room:room-guava", version.ref = "room" }
androidx-room-common = { module = "androidx.room:room-common", version.ref = "room" }
androidx-room-rxJava3 = { module = "androidx.room:room-rxjava3", version.ref = "room" }

#Ktor
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }

#Google
google-playservices-gradlePlugin = "com.google.gms:google-services:4.4.2"
google-playservices-core = "com.google.android.play:core-ktx:1.8.1"
google-playservices-location = "com.google.android.gms:play-services-location:21.3.0"
google-playservices-appUpdate = "com.google.android.play:app-update:2.1.0"
google-material = "com.google.android.material:material:1.12.0"
google-testparameterinjector = "com.google.testparameterinjector:test-parameter-injector:1.16"

#Voyager
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-bottomSheetNavigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-androidViewModel = { module = "cafe.adriel.voyager:voyager-androidx", version.ref = "voyager" }
voyager-hilt = { module = "cafe.adriel.voyager:voyager-hilt", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-tabNavigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }

#Androidx
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxnavigation" }
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "androidxnavigation" }
androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidxtest" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxtest" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxtest" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxtest" }
androidx-test-uiAutomator = "androidx.test.uiautomator:uiautomator:2.3.0"
androidx-profileinstaller = "androidx.profileinstaller:profileinstaller:1.3.1"
androidx-benchmark-macro = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "baselineprofile" }

#Paging
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging" }
androidx-paging-testing = { module = "androidx.paging:paging-testing", version.ref = "paging" }
androidx-paging-common = { module = "androidx.paging:paging-common-ktx", version.ref = "paging" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }

#Media3
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
androidx-media3-exoplayer-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }
androidx-media3-exoplayer-rtsp = { module = "androidx.media3:media3-exoplayer-rtsp", version.ref = "media3" }
androidx-media3-exoplayer-ima = { module = "androidx.media3:media3-exoplayer-ima", version.ref = "media3" }

#Moko Resources
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }


androidx-media3-workmanager = { module = "androidx.media3:media3-exoplayer-workmanager", version.ref = "media3" }
androidx-media3-datasource-cronet = { module = "androidx.media3:media3-datasource-cronet", version.ref = "media3" }
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }
androidx-media3-datasource-rtmp = { module = "androidx.media3:media3-datasource-rtmp", version.ref = "media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
androidx-media3-extractor = { module = "androidx.media3:media3-extractor", version.ref = "media3" }
androidx-media3-cast = { module = "androidx.media3:media3-cast", version.ref = "media3" }
androidx-media3-transformer = { module = "androidx.media3:media3-transformer", version.ref = "media3" }
androidx-media3-testUtils = { module = "androidx.media3:media3-test-utils", version.ref = "media3" }
androidx-media3-testUtils-robolectric = { module = "androidx.media3:media3-test-utils-robolectric", version.ref = "media3" }
androidx-media3-database = { module = "androidx.media3:media3-database", version.ref = "media3" }
androidx-media3-decoder = { module = "androidx.media3:media3-decoder", version.ref = "media3" }
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "media3" }
androidx-media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3" }

androidx-test-espressoCore = "androidx.test.espresso:espresso-core:3.5.1"
androidx-test-espressoWeb = "androidx.test.espresso:espresso-web:3.5.1"
androidx-hilt-work = "androidx.hilt:hilt-work:1.2.0"
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt-compiler" }
androidx-hilt-navigation-compose = "androidx.hilt:hilt-navigation-compose:1.2.0"
androidx-hilt-navigation-fragment = "androidx.hilt:hilt-navigation-fragment:1.2.0"

affectedmoduledetector = "com.dropbox.affectedmoduledetector:affectedmoduledetector:0.3.1"
swipebox = "me.saket.swipe:swipe:1.3.0"

android-tools-build-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }

mockative-runtime = { module = "io.mockative:mockative", version.ref = "mockative" }
mockative-processor = { module = "io.mockative:mockative-processor", version.ref = "mockative" }

# Convention Plugins (They cannot read actual plugins from the plugins section)
conventionplugins-kover = { group = "org.jetbrains.kotlinx", name = "kover-gradle-plugin", version.ref = "kover" }
conventionplugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
conventionplugins-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
conventionplugins-ktlint = { module = "org.jlleitschuh.gradle.ktlint:org.jlleitschuh.gradle.ktlint.gradle.plugin", version.ref = "ktlint" }
conventionplugins-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
conventionplugins-sonar = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonar" }

# Lone wolves
desugaring = "com.android.tools:desugar_jdk_libs:2.0.4"
snapper = "dev.chrisbanes.snapper:snapper:0.3.0"
lottie-compose = "com.airbnb.android:lottie-compose:6.4.1"
falcon = "com.jraska:falcon:2.2.0"
assertJ = "org.assertj:assertj-core:3.26.0"
screengrab = "tools.fastlane:screengrab:2.1.1"
mockk = "io.mockk:mockk:1.13.11"
turbine = "app.cash.turbine:turbine:1.1.0"
timber = "com.jakewharton.timber:timber:5.0.1"
detekt-formatting = "io.gitlab.arturbosch.detekt:detekt-formatting:1.23.6"

napier = "io.github.aakira:napier:2.7.1"
junit = "junit:junit:4.13.2"
datePickerTimeline = "com.github.Rafsanjani:datepickertimeline:0.7.1"
uuid = "com.benasher44:uuid:0.8.4"

# Dependencies of the included build-logic
detekt-rules-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "compose-rules" }
ktlint-rules-compose = { module = "io.nlopez.compose.rules:ktlint", version.ref = "compose-rules" }

[plugins]
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "gradle" }
android-library = { id = "com.android.library", version.ref = "gradle" }
android-test = { id = "com.android.test", version.ref = "gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
google-playservices = { id = "com.google.gms.google-services", version.ref = "googlePlayServices" }
google-firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-plugin" }
google-firebase-performance = { id = "com.google.firebase.perf-plugin", version.ref = "firebasePerformancePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
androidx-baselineprofile = { id = "androidx.baselineprofile", version.ref = "baselineprofile" }
versions-plugin = { id = "com.github.ben-manes.versions", version.require = "0.51.0" }
nexus-publishing = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish" }
kmpNativeCoroutines = { id = "com.rickclephas.kmp.nativecoroutines", version.ref = "kmpNativeCoroutines" }
testLogger = { id = "com.adarshr.test-logger", version.require = "4.0.0" }
sonar = { id = "org.sonarqube", version.ref = "sonar" }
mockmp = { id = "org.kodein.mock.mockmp", version.ref = "mockmp" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
